name: Server Scripts Tests

on:
  pull_request:
    branches: [ main ]
  # Allow manual trigger of workflow
  workflow_dispatch:

jobs:
  shellcheck:
    name: ShellCheck Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ShellCheck
        run: sudo apt-get install -y shellcheck

      - name: Run ShellCheck on all shell scripts
        run: |
          find . -type f -name "*.sh" -exec shellcheck {} \;

  bash-syntax-check:
    name: Bash Syntax Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Verify bash syntax of all scripts
        run: |
          for script in $(find . -type f -name "*.sh"); do
            echo "Checking syntax for $script"
            bash -n "$script"
          done

  test-docker-user-creation:
    name: Test User Creation Script
    runs-on: ubuntu-latest
    needs: [shellcheck, bash-syntax-check]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set execute permissions
        run: chmod +x new_droplet_user.sh

      - name: Create Docker container for testing
        run: |
          docker run -d --name test-container -v ${{ github.workspace }}:/scripts ubuntu:24.04 sleep infinity

      - name: Update container and install sudo
        run: |
          docker exec test-container apt-get update
          docker exec test-container apt-get install -y sudo

      - name: Test user creation script
        run: |
          docker exec -i test-container bash -c "cd /scripts && echo -e 'testuser\ntestpassword\n' | sudo ./new_droplet_user.sh || true"

      - name: Verify user was created
        run: |
          docker exec test-container id testuser
          docker exec test-container groups testuser | grep sudo

      - name: Clean up Docker container
        run: docker rm -f test-container
        if: always()

  test-docker-install-package-check:
    name: Test Installation Script (Package Check Only)
    runs-on: ubuntu-latest
    needs: [shellcheck, bash-syntax-check]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set execute permissions
        run: chmod +x install.sh

      - name: Create simplified test script
        run: |
          cat > package_check.sh << 'EOF'
          #!/bin/bash
          # Very simple package installation test for install.sh
          # This just checks that the script can install the core packages

          # Exit immediately if a command exits with a non-zero status
          set -e

          # Function to check if a package can be installed
          check_package() {
            local package=$1
            echo "Checking if $package can be installed..."
            apt-get install -y $package
            if command -v $package >/dev/null 2>&1; then
              echo "✅ $package successfully installed"
              return 0
            else
              echo "❌ $package not found after installation"
              return 1
            fi
          }

          # Update package lists
          echo "Updating package lists..."
          apt-get update

          # Try installing some key packages that our script uses
          check_package "ufw" || echo "Warning: ufw installation issue (ignoring)"
          check_package "nginx" || echo "Warning: nginx installation issue (ignoring)"
          check_package "expect" || echo "Warning: expect installation issue (ignoring)"

          # Install one of the PHP packages (not the full set that our script installs)
          apt-get install -y php8.3-cli
          if php --version | grep -q "PHP 8.3"; then
            echo "✅ PHP 8.3 successfully installed"
          else
            echo "❌ PHP 8.3 not installed correctly"
          fi

          # Check Git installation
          check_package "git" || echo "Warning: git installation issue (ignoring)"

          # Install MariaDB client (not server)
          apt-get install -y mariadb-client
          if command -v mariadb >/dev/null 2>&1; then
            echo "✅ MariaDB client successfully installed"
          else
            echo "❌ MariaDB client not found after installation"
          fi

          echo "Basic package installation check complete"
          EOF

          chmod +x package_check.sh

      - name: Create Docker container for package check
        run: |
          docker run -d --name package-test-container -v ${{ github.workspace }}:/scripts ubuntu:24.04 sleep infinity

      - name: Run package check script
        run: |
          docker cp package_check.sh package-test-container:/
          docker exec package-test-container bash -c "chmod +x /package_check.sh && DEBIAN_FRONTEND=noninteractive apt-get update && DEBIAN_FRONTEND=noninteractive /package_check.sh"

      - name: Clean up Docker container
        run: docker rm -f package-test-container
        if: always()
